// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YemekhaneDataAccesLayer.Context;

#nullable disable

namespace YemekhaneDataAccesLayer.Migrations
{
    [DbContext(typeof(YemekhaneContext))]
    partial class YemekhaneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YemekhaneEntityLayer.Entities.Admin", b =>
                {
                    b.Property<int>("adminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("adminID"));

                    b.Property<string>("adminEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminIsim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("adminID");

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("YemekhaneEntityLayer.Entities.Calisan", b =>
                {
                    b.Property<int>("calisanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("calisanID"));

                    b.Property<bool>("aktiflik")
                        .HasColumnType("bit");

                    b.Property<string>("calisanGorevi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("calisanIsmi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("calisanKartNo")
                        .HasColumnType("int");

                    b.Property<string>("calisanSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("calisanID");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("YemekhaneEntityLayer.Entities.Okutmalar", b =>
                {
                    b.Property<int>("OkutmalarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OkutmalarID"));

                    b.Property<DateTime>("OkutmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("calisanID")
                        .HasColumnType("int");

                    b.Property<int>("gecisCount")
                        .HasColumnType("int");

                    b.Property<bool>("jokerGecis")
                        .HasColumnType("bit");

                    b.Property<int>("jokerGecisCount")
                        .HasColumnType("int");

                    b.HasKey("OkutmalarID");

                    b.HasIndex("calisanID");

                    b.ToTable("Okutmalar");
                });

            modelBuilder.Entity("YemekhaneEntityLayer.Entities.Okutmalar", b =>
                {
                    b.HasOne("YemekhaneEntityLayer.Entities.Calisan", "calisan")
                        .WithMany("Okutmal")
                        .HasForeignKey("calisanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("calisan");
                });

            modelBuilder.Entity("YemekhaneEntityLayer.Entities.Calisan", b =>
                {
                    b.Navigation("Okutmal");
                });
#pragma warning restore 612, 618
        }
    }
}
